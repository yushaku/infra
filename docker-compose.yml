version: "3.3"

services:
  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - ${redis_port:-6379}:6379
    networks:
      - common

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=redis
    ports:
      - ${REDIS_COMMAND_PORT:-8081}:8081
    networks:
      - common

  minio:
    image: bitnami/minio:2022.9.25
    container_name: minio
    restart: unless-stopped
    ports:
      - ${MINIO_PORT_ADMIN}:9001
      - ${MINIO_PORT_API}:9000
    environment:
      MINIO_ROOT_USER: ${MINIO_SERVER_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SERVER_SECRET_KEY}
    volumes:
      - ./.docker/minio:/data
    networks:
      - common

  nats:
    image: nats:2.9-alpine
    container_name: nats
    restart: unless-stopped
    ports:
      - 8222:8222
      - 4222:4222
    networks:
      - common

  postgres:
    image: postgres:14.4-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB_MAIN: ${DB_MAIN}
      POSTGRES_DB_TEST: ${DB_TEST}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
      - ./.docker/postgres/entrypoint/init-db.sh:/docker-entrypoint-initdb.d/init.sql
    networks:
      - common

  mongodb:
    container_name: mongo_db
    image: mongo:6.0.2-focal
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - .docker/mongodb:/data/db
    environment:
      - MONGO_NAME=$MONGO_NAME
    networks:
      - common

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    networks:
      - common
    ports:
      - ${INFLUXDB_PORT}:8086
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}

  k6:
    image: grafana/k6:latest
    container_name: 'k6'
    networks:
      - common
    ports:
      - ${K6_PORT}:6565
    environment:
      - K6_OUT=influxdb=http://influxdb:${INFLUXDB_PORT}/k6
    volumes:
      - ./samples:/scripts

  grafana:
    image: grafana/grafana:9.3.8
    container_name: grafana
    networks:
      - common
    ports:
      - ${GRAFANA_PORT}:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./.docker/grafana:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - ./.docker/prometheus:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

networks:
  common:
    driver: bridge
    name: common
