version: "3.3"

services:
  nginx:
    image: nginx:1.20
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/nginx_log:/var/log/nginx
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - common

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - ${redis_port:-6379}:6379
    networks:
      - common

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=redis
    ports:
      - ${REDIS_COMMAND_PORT:-8081}:8081
    networks:
      - common

  minio:
    image: bitnami/minio:2022.9.25
    container_name: minio
    restart: unless-stopped
    ports:
      - ${MINIO_PORT_ADMIN}:9001
      - ${MINIO_PORT_API}:9000
    environment:
      MINIO_ROOT_USER: ${MINIO_SERVER_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SERVER_SECRET_KEY}
    volumes:
      - ./.docker/minio:/data
    networks:
      - common

  nats:
    image: nats:2.9-alpine
    container_name: nats
    restart: unless-stopped
    ports:
      - 8222:8222
      - 4222:4222
    networks:
      - common

  postgres:
    image: postgres:14.4-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB_MAIN: ${DB_MAIN}
      POSTGRES_DB_TEST: ${DB_TEST}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
      - ./config/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - common

  mongodb:
    container_name: mongo_db
    image: mongo:6.0.2-focal
    ports:
      - ${MONGO_PORT:-5433}:5433
    volumes:
      - .docker/mongodb:/data/db
    environment:
      - MONGO_NAME=$MONGO_NAME
    networks:
      - common

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: unless-stopped
    networks:
      - common
    ports:
      - ${INFLUXDB_PORT:-8086}:8086
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB:-influxdb}
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
      - ./.docker/influxdb:/var/lib/influxdb
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    # volumes:
    #   - ./.docker/prometheus:/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:9.3.8
    container_name: grafana
    networks:
      - common
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    links:
      - influxdb
    depends_on:
      - influxdb

  # k6:
  #   image: grafana/k6:latest
  #   container_name: 'k6'
  #   networks:
  #     - common
  #   ports:
  #     - ${K6_PORT:-6565}:6565
  #   environment:
  #     - K6_OUT=influxdb=http://influxdb:${INFLUXDB_PORT}/${INFLUXDB_DB}
  #   volumes:
  #     - ./samples:/scripts

volumes:
  grafana-storage:

networks:
  common:
    driver: bridge
    name: common
